worker_processes  1;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;

    server {
        listen       80;
        server_name  localhost;

        # 指定 DNS 解析器
        resolver 127.0.0.11;

        location / {
            proxy_pass http://gzctf:8080; # 保留这行作为默认行为
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # 支持 WebSocket
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
        }

        location ~ ^/api/game/(\d+)/details$ {
            gzip off;  

            content_by_lua_block {
                local http = require('resty.http')
                local cjson = require "cjson"

                -- 获取客户端请求的 Cookie
                local cookie = ngx.var.http_cookie

                -- 获取游戏 ID
                local game_id = ngx.var[1]

                -- 创建 HTTP 客户端实例
                local httpc = http.new()

                -- 发起 HTTP 请求
                local res, err = httpc:request_uri("http://gzctf:8080/api/game/" .. game_id .. "/details", {
                    method = "GET",
                    headers = {
                        ["Cookie"] = cookie,
                        ["X-Forwarded-For"] = ngx.var.remote_addr,
                    },
                    query = ngx.var.args  -- 转发查询参数
                })

                if not res then
                    ngx.status = ngx.HTTP_INTERNAL_SERVER_ERROR
                    ngx.say("failed to request: ", err)
                    return
                end

                if res.status ~= ngx.HTTP_OK then
                    ngx.status = res.status
                    ngx.say("failed to request: ", res.body)
                    return
                end

                -- 解析 JSON 响应
                local data, err = cjson.decode(res.body)
                if not data then
                    ngx.say("failed to decode JSON: ", err)
                    return
                end

                -- 修改 rank 字段
                if data.rank then
                    data.rank.rank = -1
                end

                -- 发送修改后的 JSON 响应
                ngx.header.content_type = "application/json"
                ngx.say(cjson.encode(data))
            }
        }

        location ~ ^/api/game/(\d+)/scoreboard$ {
            return 200 '{
                "updateTimeUtc": "2024-05-13T08:54:29.6383344+00:00",
                "bloodBonus": 52459530,
                "timeLines": {
                    "all": []
                },
                "items": [],
                "challenges": {}
            }';
            add_header Content-Type application/json;
        }

        location /static/index.CNx9s2ZO.js {
            content_by_lua_block {
                local http = require("resty.http")
                local httpc = http.new()

                -- 发起 HTTP 请求
                local res, err = httpc:request_uri("http://gzctf:8080/static/index.CNx9s2ZO.js", {
                    method = "GET",
                    headers = {
                        ["X-Forwarded-For"] = ngx.var.remote_addr,
                    }
                })

                if not res then
                    ngx.status = ngx.HTTP_INTERNAL_SERVER_ERROR
                    ngx.say("failed to request: ", err)
                    return
                end

                if res.status ~= ngx.HTTP_OK then
                    ngx.status = res.status
                    ngx.say("failed to request: ", res.body)
                    return
                end

                -- 获取响应体
                local body = res.body

                -- 定义要追加的 JavaScript 代码
                local js_code = [[
                    (function() {
                        var style = document.createElement('style');
                        style.type = 'text/css';
                        style.innerHTML = '.mantine-Paper-root.mantine-Card-root.mantine-67kb6z { display: none !important; }';
                        document.head.appendChild(style);

                        var style = document.createElement('style');
                        style.type = 'text/css';
                        style.innerHTML = '.mantine-Paper-root.mantine-Card-root.mantine-3ka9y1 { display: none !important; }';
                        document.head.appendChild(style);

                        var style = document.createElement('style');
                        style.type = 'text/css';
                        style.innerHTML = '.mantine-57akiu { display: none !important; }';
                        document.head.appendChild(style);
                    })();
                ]]

                -- 在响应体末尾追加 JavaScript 代码
                body = body .. js_code

                -- 设置响应头的内容类型
                ngx.header.content_type = "application/javascript"
                -- 发送修改后的响应体
                ngx.say(body)
            }
        }
    }
}
